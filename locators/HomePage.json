{
  "url": "https://testintranet.oreillyauto.mx/ecatalog-mx/#/",
  "url_dev": "https://172.22.210.30/ecatalog-us/#/",
  "url_qa": "https://testintranet.oreillyauto.mx/ecatalog-us/#/",
  "url_prod": "https://teamnet.oreillyauto.mx/catalogo",
  "query_MXTEST-8263": "SELECT * FROM epc.application_vehicle_indexes avi INNER JOIN epc.vehicles v on v.a_vehicle_id = avi.vehicle_id WHERE avi.application_id='161096296'  AND avi.part_type_id = '02512' GROUP BY avi.application_id, avi.vehicle_id;",
  "query_MXTEST_8255": "hola mundo",
  "footer_href_links":{
      "Delivery routes Jalisco": "http://intranet.oreillyauto.mx/files/administrativo/logistica/documento.php?d=Y2lyY3VpdG9fc3VjdXJzYWxlc19qYWxpc2NvLnBkZg==&n=Q2lyY3VpdG9zIGVudHJlIHN1Y3Vyc2FsZXMgSmFsaXNjbw==",
      "Delivery routes Leon": "http://intranet.oreillyauto.mx/files/administrativo/almacen/documento.php?d=Y2lyY3VpdG9fbGVvbi5wZGY=&n=Q2lyY3VpdG8gZW50cmUgU3VjdXJzYWxlcyBMZcOzbg==",
      "Orma Stores": "https://www.orma.com.mx/sucursales",
      "Product lines": "http://intranet.oreillyauto.mx/files/cat_prov_online.html"
    },
  "locators": {
    "search_bar": {
      "by": "XPATH",
      "value": "//input[@role='searchbox']"
    },
    "carousel" : {
      "by": "XPATH",
      "value": "//ul[@ng-reflect-ng-class='p-carousel-indicators p-reset']"
    },
    "footer_logo": {
      "by": "XPATH",
      "value": "//div[@class='footer-logo']"
    },
    "add_vehicle_btn": {
      "by": "XPATH",
      "value": "//span[@class='vehicle-selected notranslate']"
    },
    "vehicle_country_checkbox_icons": {
      "by": "XPATH",
      "value": "//p-checkbox[@inputid='c.id']"
    },
    "part_interchange_linktext": {
      "by": "XPATH",
      "value": "//div[@id='id-menu-right']//span[@id='interchange_option']"
    },
    "part_interchange_input_tbx": {
      "by": "XPATH",
      "value": "//input[@ng-reflect-model]"
    },
    "part_interchange_txt_label": {
      "by": "XPATH",
      "value": "//input[@ng-reflect-model]"
    },
    "vehicle_type_label": {
      "by": "XPATH",
      "value": "//p[contains(text(),'Vehicle type*')]"
    },
    "vehicle_type_tbx": {
      "by": "XPATH",
      "value": "//p-autocomplete[@field='vehicleTypeDescription']//input"
    },
    "vehicle_type_dropdown": {
      "by": "XPATH",
      "value": "//p-autocomplete[@field='vehicleTypeDescription']//button/span"
    },
    "year_dropdown": {
      "by": "XPATH",
      "value": "//p-autocomplete[@formcontrolname='year']//button/span"
    },
    "year_input_tbx": {
      "by": "XPATH",
      "value": "//p-autocomplete[@formcontrolname='year']//input"
    },
    "make_dropdown": {
      "by": "XPATH",
      "value": "//p-autocomplete[@formcontrolname='make']//button/span"
    },
    "make_input_tbx": {
      "by": "XPATH",
      "value": "//p-autocomplete[@formcontrolname='make']//input"
    },
    "model_dropdown": {
      "by": "XPATH",
      "value": "//p-autocomplete[@formcontrolname='model']//button"
    },
    "model_input_tbx": {
      "by": "XPATH",
      "value": "//p-autocomplete[@formcontrolname='model']//input"
    },
    "submodel_tbx": {
      "by": "XPATH",
      "value": "//p-autocomplete[@formcontrolname='subModel']//input"
    },
    "submodel_dropdown": {
      "by": "XPATH",
      "value": "//p-autocomplete[@formcontrolname='subModel']//button/span"
    },
    "engine_dropdown": {
      "by": "XPATH",
      "value": "//p-autocomplete[@formcontrolname='engine']//button/span[1]"
    },
    "engine_tbx": {
      "by": "XPATH",
      "value": "//p-autocomplete[@formcontrolname='engine']//input"
    },
    "add_vehicle_button_submit": {
      "by": "XPATH",
      "value": "//button[@type='submit']"
    },
    "list_box": {
      "by": "XPATH",
      "value": "//ul[@role='listbox']/li"
    },
    "add_new_vehicle_btn": {
      "by": "XPATH",
      "value": "//p-button[@ng-reflect-label='Add new vehicle']"
    },
    "recent_vehicles": {
      "by": "XPATH",
      "value": "//div[@class='o-image-list']"
    },
    "edit_info_btn": {
      "by": "XPATH",
      "value": "//button[@ng-reflect-label='Edit info']"
    },
    "save_changes_btn": {
      "by": "XPATH",
      "value": "//p-button[@ng-reflect-label='Save changes']"
    },
    "labels_vehicle_selected": {
      "by": "XPATH",
      "value": "//div[@class='ng-star-inserted']//div[@class='px-4']/p"
    },
    "delete_all_btn": {
      "by": "XPATH",
      "value": "//button[@ng-reflect-label='DELETE ALL']"
    },
    "add_vehicle_info_label": {
      "by": "XPATH",
      "value": "//span[contains(text(),'Add vehicle info')]"
    },
    "load_spinner": {
      "by": "XPATH",
      "value": "//div[@class='panel panel-breadcrumb']/div"
    },
    "general_category_list": {
      "by": "XPATH",
      "value": "//div[@class='m-0 category-list-colums']/div/span"
    },
    "subcategory_list": {
      "by": "XPATH",
      "value": "//div[@role='button']/span"
    },
    "subcategory_list_2": {
      "by": "XPATH",
      "value": "//div[@class='m-0 category-list-colums column-fill-auto']/div"
    },
    "subcategory_list_3": {
      "by": "XPATH",
      "value": "//div[@class='m-0 category-list-colums']/div[@role='button']"
    },
    "label_subcategory_selected": {
      "by": "XPATH",
      "value": "//div[@class='category-space-title']//span"
    },
    "breadcrum_section_link_list": {
      "by": "XPATH",
      "value": "//section[@class='breadcrum-section']//li/a"
    },
    "element_buttons_grid_category": {
      "by": "XPATH",
      "value": "//div[@role='button']//img"
    },
    "link_products_list": {
      "by": "XPATH",
      "value": "//ol[@class='p-0 m-0']//a"
    },
    "link_products_list_2": {
      "by": "XPATH",
      "value": "//div[@role='button']"
    },
    "additional_label": {
      "by": "XPATH",
      "value": "//h2[contains(text(),'Additional')]"
    },
    "homePage_button": {
      "by": "XPATH",
      "value": "//div[@id='search_section']/img"
    },
    "lasted_products_viewed_list": {
      "by": "XPATH",
      "value": "//p[@tooltipposition='top']"
    },
    "last_viewed_products_label":{
      "by": "XPATH",
      "value": "//span[contains(text(),'Latest Viewed Products')]"
    },
    "spinner": {
      "by": "XPATH",
      "value": "//div[@role='alert']"
    },
    "span_filter_by": {
      "by": "XPATH",
      "value": "//div[@class='title']//span[contains(text(),'filter by')]"
    },
    "tools_span": {
      "by": "XPATH",
      "value": "//o-footer//span[contains(text(),'Tools')]"
    },
    "footer_links": {
      "by": "XPATH",
      "value": "//o-footer//div[@class='glossary-tools']//a"
    },
    "search_results_label": {
      "by": "XPATH",
      "value": "//span[contains(text(),'Search Results')]"
    },
    "popular_categories_label": {
      "by": "XPATH",
      "value": "//span[contains(text(),'POPULAR CATEGORIES')]"
    },
    "close_categories_x_button": {
      "by": "XPATH",
      "value": "//div[@class='p-card-header ng-star-inserted']//button"
    },
    "close_part_interchange_x_button": {
      "by": "XPATH",
      "value": "//div[@role='dialog']//button[@tabindex='-1']"
    },
    "brands_dropdown": {
      "by": "XPATH",
      "value": "//section[@class='submenu ps-5 ng-star-inserted']//span[contains(text(),'BRANDS')]"
    },
     "deals_button": {
      "by": "XPATH",
      "value": "//span[contains(text(),'DEALS')]"
    },
    "show_all_brands_link": {
      "by": "XPATH",
      "value": "//span[contains(text(),' Show all brands ')]"
    },
    "brands_images": {
      "by": "XPATH",
      "value": "//o-brand-menu//img"
    },
    "explore_brands_label": {
      "by": "XPATH",
      "value": "//h3[contains(text(),'EXPLORE BRANDS')]"
    },
    "all_brands_link_list":{
      "by": "XPATH",
      "value": "//span[@class='p-button-label ng-star-inserted']"
    },

    "no_results_message": {
      "by": "XPATH",
      "value": "//div[@class='description']/span[1]"
    },
    "go_back_btn": {
      "by": "XPATH",
      "value": "//button[@ng-reflect-label='GO BACK']"
    },
    "general_categories_label": {
      "by": "XPATH",
      "value": "//span[contains(text(),'GENERAL CATEGORIES')]"
    },
    "part_number":{
      "by": "XPATH",
      "value": "//div[@class='actions']//div/div"
    },
    "highlight_search_result": {
      "by": "XPATH",
      "value": "//span[@class='highlight-autocomplete']"
    },
    "blank_space": {
      "by": "XPATH",
      "value": "//body"
    },
    "img_logo_oreilly_home": {
      "by": "XPATH",
      "value": "//img[@id='logo-no-feedback']"
    },
    "part_interchange_search_button": {
      "by": "XPATH",
      "value": "//interchange-modal//button[@icon='pi pi-search']"
    },
    "no_results_container": {
      "by": "XPATH",
      "value": "//div[@class='no-results-container']"
    },
    "part_interchange_step_2": {
      "by": "XPATH",
      "value": "//div[@class='fade-in-up ng-star-inserted']"
    },
    "part_interchange_step_2_list": {
      "by": "XPATH",
      "value": "//div[@class='fade-in-up ng-star-inserted']//li"
    },
    "category_nav_limiter": {
      "by": "XPATH",
      "value": "//div[@class='category-nav-limiter']"
    },
      "category_nav_limiter_h2": {
      "by": "XPATH",
      "value": "//div[@class='category-nav-limiter']/h2"
    },
    "check_vehicle_fit_btn": {
      "by": "XPATH",
      "value": "//div[@class='check-compatibility-action']//button"
    },
    "compatibility_message_label": {
      "by": "XPATH",
      "value": "//p[@class='badge-text']/span[2]"
    },
    "new_client_label": {
      "by": "XPATH",
      "value": "//p[contains(text(),'New Client')]"
    },
    "new_client_continue_btn": {
      "by": "XPATH",
      "value": "//button[contains(text(),'Continue')]"
    },
    "new_client_cancel_btn": {
      "by": "XPATH",
      "value": "//button[contains(text(),'Cancel')]"
    },
    "sort_by_dropdown": {
      "by": "XPATH",
      "value": "//p-dropdown[@optionlabel='name']"
    },
    "sort_by_label": {
      "by": "XPATH",
      "value": "//span[contains(text(),'Sort by: ')]"
    },
    "no_part_copy_to_clipboard": {
      "by": "XPATH",
      "value": "//app-copy-to-clipboard"
    },
       "categories_btn": {
      "by": "XPATH",
      "value": "//section//span[contains(text(),'CATEGORIES')]/following-sibling::i"
    },
    "popular_categories_list_btn": {
      "by": "XPATH",
      "value": "//div[@class='category-popular-categories d-inline-block ng-star-inserted']//div[@role='button']"
    },
    "list_container": {
      "by": "XPATH",
      "value": "//div[@class='category-iterable-body']"
    },
    "last_category_on_list": {
      "by": "XPATH",
      "value": "//span[normalize-space()='Turbocharger & Supercharger']"
    },
    "category_landing_elements_img": {
      "by": "XPATH",
      "value": "//div[@role='button']//p"
    },
    "category_landing_title": {
      "by": "XPATH",
      "value": "//div[@class='category-nav-limiter']/h2"
    },
    "filter_section": {
      "by": "XPATH",
      "value": "//div[@class='filters-column ng-star-inserted']"
    },
    "plp_title": {
      "by": "XPATH",
      "value": "//span[@class='roboto-800 fs-16px notranslate']"
    },
    "loading_img": {
      "by": "XPATH",
      "value": "//div[@role='alert']//*[name()='svg']",
      "value1": "//p[contains(text(),'Loading')]"
    },
    "plp_error": {
      "by": "XPATH",
      "value": "//div[@class='description']/span[contains(text(),'no results were found')]"
    },

    "autocomplet_panel": {
      "by": "XPATH",
      "value": "//div[contains(@class,'p-autocomplete-panel')]"
    },

    "model_input": {
      "by": "XPATH",
      "value": "//p-autocomplete[@formcontrolname='model']//input"
    },
    "submodel_input": {
      "by": "XPATH",
      "value": "//p-autocomplete[@formcontrolname='subModel']//input"
    },

    "engine_input": {
      "by": "XPATH",
      "value": "//p-autocomplete[@formcontrolname='engine']//input"
    },

    "year_input": {
      "by": "XPATH",
      "value": "//p-autocomplete[@formcontrolname='year']//input"
    },

    "make_input": {
      "by": "XPATH",
      "value": "//p-autocomplete[@formcontrolname='make']//input"
    },

    "additional_cat_names": {
      "by": "XPATH",
      "value": "//div[contains(@class,'category-nav-button-text')]/span"
    },
    "img_cat_names": {
      "by": "XPATH",
      "value": "//div[contains(@class,'category-nav-card')]//p"
    },
    "fits_element": {
      "by": "XPATH",
      "value": "//div[@role='badge']/p/span[contains(@class,'roboto-400')]"
    },
    "filter_option_selected":{
      "by": "XPATH",
      "value": "//div[@class='p-element filter']/span"
    },
    "filters_buttons": {
      "by": "XPATH",
      "value": "//button[contains(@class,'filter-button')]"
    },
    "filter_option_list": {
      "by": "XPATH",
      "value": "//div[@class='option ng-star-inserted']/a"
    },
    "vehicle_selected": {
      "by": "XPATH",
      "value": "//span[@class='vehicle-selected notranslate']"
    },
    "MEX_span":{
      "by": "XPATH",
      "value": "//span[contains(text(),'MEX')]"
    },
    "CAN_span":{
      "by": "XPATH",
      "value": "//span[contains(text(),'CAN')]"
    },
    "USA_span":{
      "by": "XPATH",
      "value": "//span[contains(text(),'USA')]"
    },
    "add_vehicle_span": {
      "by": "XPATH",
      "value": "//span[text()='Add vehicle']"
    },
    "MEX_check":{
      "by": "XPATH",
      "value": "//p-checkbox[@ng-reflect-value='2']"
    },
    "CAN_check":{
      "by": "XPATH",
      "value": "//p-checkbox[@ng-reflect-value='1']"
    },
    "USA_check":{
      "by": "XPATH",
      "value": "//p-checkbox[@ng-reflect-value='3']"
    },
    "chip_elements":{
      "by": "XPATH",
      "value": "//div[@class='ng-star-inserted']//p-chip"
    },
    "cartek_brand":{
      "by": "XPATH",
      "value": "//o-brand-menu//img/following-sibling::span[text()='Cartek']"
    },
    "bodyglove_brand":{
      "by": "XPATH",
      "value": "//o-brand-menu//img/following-sibling::span[contains(text(),'Body Glove')]"
    },
    "add_to_list_btn":{
      "by": "XPATH",
      "value": "//button/span[text()='add to list']"
    },
    "product_name": {
      "by": "XPATH",
      "value": "//a/div/div/span[2]"
    },
    "product_name_ol": {
      "by": "XPATH",
      "value": "//div[@class='col']/div/p"
    },
    "order_list_label": {
      "by": "XPATH",
      "value": "//h3[contains(text(),'Order List')]"
    },
    "panel_title": {
      "by": "XPATH",
      "value": "//p-panel/div/div/div/div/span"
    },
    "close_modal": {
      "by": "XPATH",
      "value": "//span[contains(@class,'p-sidebar-close')]"
    },
    "delete_button": {
      "by": "XPATH",
      "value": "//span[text()='Delete']"
    },
    "no_added_label": {
      "by": "XPATH",
      "value": "//span[contains(.,'You haven')]"
    },
     "order_list_button": {
      "by": "XPATH",
      "value": "//span[contains(.,'ORDER LIST')]"
    },
    "delete_all_button": {
      "by": "XPATH",
      "value": "//span[text()='DELETE ALL']"
    },
    "yes_remove_button": {
      "by": "XPATH",
      "value": "//button[text()='yes, remove all']"
    },
    "clear_label": {
      "by": "XPATH",
      "value": "//p[text()='Clear item list']"
    },
    "cancel_btn": {
      "by": "XPATH",
      "value": "//button[normalize-space()='cancel']"
    }

  }
}
